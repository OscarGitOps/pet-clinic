name: Workflows
on:
  push:
    branches:
      - feat-clase2

jobs:        
  SAST:
    runs-on: ubuntu-latest

    
    steps:

      #requesitos JDK para sonar
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
    
      #copia de proyecto
      - name: Checkout code
        uses: actions/checkout@v2  

     #construccion/compilacion
      - name: Build
        run: | 
          chmod 777 gradlew
          ./gradlew build
    
    #sonarcloud  #actualizacion metodo basico
    #  - name: Analisis SonarCloud
    #    run: |
    #     mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.3922:sonar \
    #     -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
    #     -Dsonar.host.url=https://sonarcloud.io \
    #     -Dsonar.organization=oscargitops \
    #     -Dsonar.projectKey=OscarGitOps_pet-clinic
   

    #  - name: Validando tipo de proyecto
    #    id: tipoProyecto
    #    run: |
    #      pwd
    #      ls -R
    #      if [ -f "build.gradle" ]
    #      then
    #        echo "Proyecto Java"
    #        if grep -q 'id "org.sonarqube" version "3.3"' build.gradle
    #        then
    #          echo "El plugin de SonarCloud ya está presente en build.gradle"
    #        else
    #          sed -i '/id '\''java'\''/a \ \ \ \ id '\''org.sonarqube'\'' version '\''3.3'\''' build.gradle
    #          echo "El plugin de SonarCloud no estaba presente y se ha sido añadido a build.gradle"
    #          cat build.gradle
    #        fi
    #
    #      else
    #        echo "Tipo de proyecto desconocido"
    #      fi
          
    #habilitar ejecucion
      - name: Enable execution gradlew
        run: | 
         chmod 777 gradlew
      
      - name: Run SonarQube analysis
        run: |
         ./gradlew sonarqube \
         -Dsonar.projectKey=OscarGitOps_pet-clinic \
         -Dsonar.organization=oscargitops \
         -Dsonar.host.url=https://sonarcloud.io \
         -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
         -Dsonar.branch.name=feat-clase2



#--------------------- SCA -------------------------------------------
      
  SCA:
    needs: SAST
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout code
        uses: actions/checkout@v2             

      - name: Build
        id: build
        run: |
          #pwd
          #ls -R
          if [ -f "build.gradle" ]
          then
            echo "Utiliza build.gradle, proyecto Java"
            echo "Se habilita permiso de ejecución de archivo gradlew"
            chmod 777 gradlew
            ./gradlew build
          else
            echo "Otro tipo de proyecto"
          fi



      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@1.1.0
        env:
         JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: '${{ github.event.repository.name }}'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired
            
      - name: Upload Test result
        uses: actions/upload-artifact@master
        with:
          name: Depcheck report
          path: ${{github.workspace}}/reports

## ----------------- Docker Build Image ----------------------------------------
  
  DockerBuild:
    needs: SCA
    runs-on: self-hosted
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Docker Login
      uses: docker/login-action@v3.2.0
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}
   
    #- name: Download JAR ..
    #  uses: actions/download-artifact@master
    #  with:
    #    name: JAR
    #    path: ${{github.workspace}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3  


    - name: Build Docker
      run: |
        docker build --tag oscargitops/pet-clinic:latest .

    - name: Push Docker
      run: |
        docker push oscargitops/pet-clinic:latest          
    