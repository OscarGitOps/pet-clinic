name: Workflow
on:
  push:
    branches:
      - feat-clase3

jobs:        
  SAST:
    runs-on: ubuntu-latest
    steps:

    
    - name: Instalar curl
      run: |
        sudo apt-get update && sudo apt-get install -y curl  

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Checkout code
      uses: actions/checkout@v2

    
    - name: Build
      run: | 
        chmod 777 gradlew
        ./gradlew build
    

    - name: Validando existencia de proyecto en SonarCloud
      id: validateProjectOnSonar
      run: |
       set +e
       curl -f -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/projects/create' -d 'name=${{ github.event.repository.name }}' -d 'project=${{ github.event.repository.name }}' -d 'organization=oscargitops' -d 'visibility=public'
        if [ $? -ne 0 ]; then
         echo "Proyecto ya existe en Sonarcloud"
         echo "::set-output name=proyectoExiste::1"
         
        else
         echo "Proyecto ${{ github.event.repository.name }} creado exitosamente en Sonarcloud"
          
         echo "Se establece rama main como rama por defecto"
         curl -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/project_branches/rename' -d 'name=main' -d 'project=${{ github.event.repository.name }}'
        fi
       set -e


    - name: Validando tipo de proyecto
      id: tipoProyecto
      if: steps.validateProjectOnSonar.outputs.proyectoExiste == '1'
      run: |
        pwd
        ls -R
        if [ -f "build.gradle" ]
        then
          echo "Proyecto Java"
          if grep -q 'id "org.sonarqube" version "3.3"' build.gradle
          then
            echo "El plugin de SonarCloud ya está presente en build.gradle ------"
          else
            sed -i '/id '\''java'\''/a \ \ \ \ id '\''org.sonarqube'\'' version '\''3.3'\''' build.gradle
            echo "El plugin de SonarCloud no estaba presente y se ha sido añadido a build.gradle"
            cat build.gradle
          fi

        else
          echo "Tipo de proyecto desconocido"
        fi
    - name: Enable execution gradlew
      run: | 
          chmod 777 gradlew
      
    - name: Run SonarQube analysis
      run: |
         ./gradlew sonarqube \
         -Dsonar.projectKey=OscarGitOps_pet-clinic \ 
         -Dsonar.organization=oscargitops \
         -Dsonar.host.url=https://sonarcloud.io \
         -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
         -Dsonar.branch.name=feat-clase3


    - name: Validate Quality Gate
      run: |
        idanalisis=$(curl -f -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/ce/component?OscarGitOps_pet-clinic')
        idanalisisParse=$(echo "$idanalisis" | jq .current.analysisId | sed -e 's/^"//' -e 's/"$//')
   
        qualitygate=$(curl -f -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/qualitygates/project_status?analysisId=$idanalisisParse')
        qualitygateStatus=$(echo "$qualitygate" | jq .projectStatus.status | sed -e 's/^"//' -e 's/"$//')
   
        case $qualitygateStatus in
           *"OK"*)
             echo "Proyecto Cumple con quality gate"
             exit 0
             ;;
           *"ERROR"*)
             echo "Proyecto NO cumple con QualityGate"
             exit 1
             ;;
           *)
            echo "Proyecto NO cumple"
            exit 1
            ;;
        esac
   